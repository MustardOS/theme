name: Font Change

on: workflow_dispatch

concurrency: 
  group: release

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      repository-projects: write
    steps:

      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Do it for one!
        run: |
          for dir in */; do dir_name="${dir%/}"
          if [[ "${dir_name}" != preview  ]] ; then
          (cd "${dir_name}/scheme"
          for file in *; do
          if grep -q FONT_HEADER_PAD_TOP= "$file"; then
          lineno=$(awk '/FONT_HEADER_PAD_TOP=/{print NR}' "$file")
          echo $lineno
          sed -i "${lineno}s/.*FONT_HEADER_PAD_TOP=.*/FONT_HEADER_PAD_TOP=0/" "$file"
          fi 
          if grep -q FONT_HEADER_PAD_BOTTOM= "$file"; then
          lineno=$(awk '/FONT_HEADER_PAD_BOTTOM=/{print NR}' "$file")
          echo $lineno
          sed -i "${lineno}s/.*FONT_HEADER_PAD_BOTTOM=.*/FONT_HEADER_PAD_BOTTOM=0/" "$file"
          fi
          if grep -q FONT_HEADER_ICON_PAD_TOP= "$file"; then
          lineno=$(awk '/FONT_HEADER_ICON_PAD_TOP=/{print NR}' "$file")
          echo $lineno
          sed -i "${lineno}s/.*FONT_HEADER_ICON_PAD_TOP=.*/FONT_HEADER_ICON_PAD_TOP=0/" "$file"
          fi 
          if grep -q FONT_HEADER_ICON_PAD_BOTTOM= "$file"; then
          lineno=$(awk '/FONT_HEADER_ICON_PAD_BOTTOM=/{print NR}' "$file")
          echo $lineno
          sed -i "${lineno}s/.*FONT_HEADER_ICON_PAD_BOTTOM=.*/FONT_HEADER_ICON_PAD_BOTTOM=0/" "$file"
          fi 
          if grep -q FONT_FOOTER_PAD_TOP= "$file"; then
          lineno=$(awk '/FONT_FOOTER_PAD_TOP=/{print NR}' "$file")
          echo $lineno
          sed -i "${lineno}s/.*FONT_FOOTER_PAD_TOP=.*/FONT_FOOTER_PAD_TOP=0/" "$file"
          fi
          if grep -q FONT_FOOTER_PAD_BOTTOM= "$file"; then
          lineno=$(awk '/FONT_FOOTER_PAD_BOTTOM=/{print NR}' "$file")
          echo $lineno
          sed -i "${lineno}s/.*FONT_FOOTER_PAD_BOTTOM=.*/FONT_FOOTER_PAD_BOTTOM=0/" "$file"
          fi 
          if grep -q FONT_FOOTER_ICON_PAD_TOP= "$file"; then
          lineno=$(awk '/FONT_FOOTER_ICON_PAD_TOP=/{print NR}' "$file")
          echo $lineno
          sed -i "${lineno}s/.*FONT_FOOTER_ICON_PAD_TOP=.*/FONT_FOOTER_ICON_PAD_TOP=0/" "$file"
          fi 
          if grep -q FONT_FOOTER_ICON_PAD_BOTTOM= "$file"; then
          lineno=$(awk '/FONT_FOOTER_ICON_PAD_BOTTOM=/{print NR}' "$file")
          echo $lineno
          sed -i "${lineno}s/.*FONT_FOOTER_ICON_PAD_BOTTOM=.*/FONT_FOOTER_ICON_PAD_BOTTOM=0/" "$file"
          fi 
          if grep -q FONT_MESSAGE_PAD_TOP= "$file"; then
          lineno=$(awk '/FONT_MESSAGE_PAD_TOP=/{print NR}' "$file")
          echo $lineno
          sed -i "${lineno}s/.*FONT_MESSAGE_PAD_TOP=.*/FONT_MESSAGE_PAD_TOP=0/" "$file"
          fi 
          if grep -q FONT_MESSAGE_PAD_BOTTOM= "$file"; then
          lineno=$(awk '/FONT_MESSAGE_PAD_BOTTOM=/{print NR}' "$file")
          echo $lineno
          sed -i "${lineno}s/.*FONT_MESSAGE_PAD_BOTTOM=.*/FONT_MESSAGE_PAD_BOTTOM=0/" "$file"
          fi 
          if grep -q FONT_LIST_PAD_TOP= "$file"; then
          lineno=$(awk '/FONT_LIST_PAD_TOP=/{print NR}' "$file")
          echo $lineno
          sed -i "${lineno}s/.*FONT_LIST_PAD_TOP=.*/FONT_LIST_PAD_TOP=0/" "$file"
          fi 
          if grep -q FONT_LIST_PAD_BOTTOM= "$file"; then
          lineno=$(awk '/FONT_LIST_PAD_BOTTOM=/{print NR}' "$file")
          echo $lineno
          sed -i "${lineno}s/.*FONT_LIST_PAD_BOTTOM=.*/FONT_LIST_PAD_BOTTOM=0/" "$file"
          fi 
          if grep -q FONT_LIST_ICON_PAD_TOP= "$file"; then
          lineno=$(awk '/FONT_LIST_ICON_PAD_TOP=/{print NR}' "$file")
          echo $lineno
          sed -i "${lineno}s/.*FONT_LIST_ICON_PAD_TOP=.*/FONT_LIST_ICON_PAD_TOP=0/" "$file"
          fi 
          if grep -q FONT_LIST_ICON_PAD_BOTTOM= "$file"; then
          lineno=$(awk '/FONT_LIST_ICON_PAD_BOTTOM=/{print NR}' "$file")
          echo $lineno
          sed -i "${lineno}s/.*FONT_LIST_ICON_PAD_BOTTOM=.*/FONT_LIST_ICON_PAD_BOTTOM=0/" "$file"
          fi 
          if grep -q IDIOT "$file"; then
          echo "Found IDIOT!"
          fi 
          done)
          fi
          done
        
     # - name: Do it
     #   run: |
     #     for dir in */; do dir_name="${dir%/}"
     #     if [[ "${dir_name}" != preview  ]] ; then
     #     (cd "${dir_name}/scheme" && echo -e "\n[counter]\nCOUNTER_ENABLED=1\nCOUNTER_ALIGNMENT=2\nCOUNTER_PADDING_AROUND=10\nCOUNTER_PADDING_SIDE=5\nCOUNTER_PADDING_TOP=50\nCOUNTER_BORDER_COLOUR=808080\nCOUNTER_BORDER_ALPHA=255\nCOUNTER_BORDER_WIDTH=2\nCOUNTER_RADIUS=3\nCOUNTER_BACKGROUND=100808\nCOUNTER_BACKGROUND_ALPHA=255\nCOUNTER_TEXT=FFFFFF\nCOUNTER_TEXT_ALPHA=255\nCOUNTER_TEXT_FADE_TIME=50\nCOUNTER_TEXT_SEPARATOR= / \n" | tee -a *.txt)
     #     fi
     #     done

# And committing it all!
      - name: Push files to the github, replacing the previous
        run: |
          git config --global user.name "VagueParade"
          git config --global user.email "166325657+VagueParade@users.noreply.github.com"

          git add -A
          git commit -m "Font changes"
          git push
          
