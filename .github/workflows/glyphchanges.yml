name: Glyph Changes

on: workflow_dispatch

concurrency: 
  group: release

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      repository-projects: write
    steps:

      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Do it for one!
        run: |
          for dir in */; do dir_name="${dir%/}"
          if [[ "${dir_name}" != preview  ]] ; then
          (cd "${dir_name}/scheme"
          for file in *; do
          if grep -q LIST_DEFAULT_TEXT_ALPHA=0 "$file"; then
          linenor=$(awk '/LIST_DEFAULT_TEXT_ALPHA=0/ { ln = FNR } END { print ln }' "$file")
          echo "invisible menu. linenor is ${linenor}"
          sed -i "${linenor}i LIST_DEFAULT_GLYPH_ALPHA=0" "$file"
          sed -i "${linenor}i LIST_FOCUS_GLYPH_ALPHA=0" "$file"
          echo "success!"
          echo "$file"
          else
          lineno=$(awk '/LIST_DEFAULT_TEXT_ALPHA/ { ln = FNR } END { print ln }' "$file")
          echo "visible menu. lineno is ${lineno}. start inserting glyph"
          sed -i "${lineno}i LIST_DEFAULT_GLYPH_ALPHA=255" "$file"
          sed -i "${lineno}i LIST_FOCUS_GLYPH_ALPHA=255" "$file"
          sed -i "${lineno}i LIST_DEFAULT_GLYPH_RECOLOUR_ALPHA=255" "$file"
          sed -i "${lineno}i LIST_FOCUS_GLYPH_RECOLOUR_ALPHA=255" "$file"
          linenom=$(awk '/LIST_DEFAULT_TEXT=/ { ln = FNR } END { print ln }' "$file")
          echo "default hex line number is ${linenom}. get line contents"
          deflinecont=$(sed -n "${linenom}p" "$file")
          echo "default line is ${deflinecont}. get default hexcode"
          echo "hex code is ${deflinecont: -6}. start finding focus line"
          linenomb=$(awk '/LIST_FOCUS_TEXT=/ { ln = FNR } END { print ln }' "$file")
          echo "focus line is ${linenomb}. find focus line contents"
          foclinecont=$(sed -n "${linenomb}p" "$file")
          echo "focus line is ${foclinecont}. get focus hexcode"
          echo "focus hex code is ${foclinecont: -6}"
          sed -i "${linenom}i LIST_DEFAULT_GLYPH_RECOLOUR=${deflinecont: -6}" "$file"
          sed -i "${linenomb}i LIST_FOCUS_GLYPH_RECOLOUR=${foclinecont: -6}" "$file"
          echo "success!"
          echo "$file"
          fi
          done)
          fi
          done
      #    for dir in */; do dir_name="${dir%/}"
      #    if [[ "${dir_name}" != preview  ]] ; then
      #    (cd "${dir_name}/scheme"
      #    for file in *; do
      #    if grep -q FONT_HEADER_PAD_TOP= "$file"; then
      #    lineno=$(awk '/FONT_HEADER_PAD_TOP=/{print NR}' "$file")
      #    echo $lineno
      #    sed -i "${lineno}s/.*FONT_HEADER_PAD_TOP=.*/FONT_HEADER_PAD_TOP=0/" "$file"
      #    fi
      #    done)
      #    fi
      #    done
        
     # - name: Do it
     #   run: |
     #     for dir in */; do dir_name="${dir%/}"
     #     if [[ "${dir_name}" != preview  ]] ; then
     #     (cd "${dir_name}/scheme" && echo -e "\n[counter]\nCOUNTER_ENABLED=1\nCOUNTER_ALIGNMENT=2\nCOUNTER_PADDING_AROUND=10\nCOUNTER_PADDING_SIDE=5\nCOUNTER_PADDING_TOP=50\nCOUNTER_BORDER_COLOUR=808080\nCOUNTER_BORDER_ALPHA=255\nCOUNTER_BORDER_WIDTH=2\nCOUNTER_RADIUS=3\nCOUNTER_BACKGROUND=100808\nCOUNTER_BACKGROUND_ALPHA=255\nCOUNTER_TEXT=FFFFFF\nCOUNTER_TEXT_ALPHA=255\nCOUNTER_TEXT_FADE_TIME=50\nCOUNTER_TEXT_SEPARATOR= / \n" | tee -a *.txt)
     #     fi
     #     done

# And committing it all!
      - name: Push files to the github, replacing the previous
        run: |
          git config --global user.name "VagueParade"
          git config --global user.email "166325657+VagueParade@users.noreply.github.com"

          git add -A
          git commit -m "Glyph changes"
          git push
          
