name: muOS Complete Archive Manager Theme Releases

on:
  push:
    branches: ["main"]
  workflow_dispatch:
    
concurrency: 
  group: release

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      repository-projects: write
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Zip directories
        run: |
          mkdir -p /tmp/release/mnt/mmc/MUOS/theme && for dir in */; do dir_name="${dir%/}"; (cd "$dir_name" && zip -qq -r "/tmp/release/mnt/mmc/MUOS/theme/${dir_name}.zip" *); done

      - name: Delete preview zip
        run: |
          rm /tmp/release/mnt/mmc/MUOS/theme/preview.zip

      - name: Add preview folder to complete archive
        run: |
          mv preview /tmp/release/mnt/mmc/MUOS/theme
          
      - name: Zip mnt folder
        run: |
          (cd /tmp/release && zip -r @_Complete_Theme_Archive.zip mnt)

      - name: Create individual archive managers
        run: |
          for dir in */; do dir_name="${dir%/}"; (cd /tmp/release && zip -r "${dir_name}.zip" . -i "/mnt/mmc/MUOS/theme/${dir_name}.zip"); done
     
      - name: Insert preview images in the individual archives
        run: |
          for dir in */; do dir_name="${dir%/}"; (cd /tmp/release && zip -r "${dir_name}.zip" . -i "/mnt/mmc/MUOS/theme/preview/${dir_name}.png"); done
     
      - name: List archives
        run: |
          ls -1 /tmp/release
          
      - name: Delete releases
        uses: sgpublic/delete-release-action@v1.1
        with:
          release-drop: true
          release-keep-count: -1
          release-drop-tag: true
          pre-release-drop: true
          pre-release-keep-count: -1
          pre-release-drop-tag: true
          draft-drop: true
          draft-drop-count: -1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get release name for artifacts
        id: date
        run: |
            echo "date=$(date +'%Y-%m-%d_%H%M')" >> $GITHUB_OUTPUT

      - name: Prepare Release
        uses: ncipollo/release-action@v1.14.0
        with:
          name: "All Themes - Archive Manager"
          tag: "${{steps.date.outputs.date}}"
          allowUpdates: true
          draft: true
          prerelease: false
          replacesArtifacts: false
          omitNameDuringUpdate: true
          artifacts: "/tmp/release/*"
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish Release
        uses: ncipollo/release-action@v1.14.0
        with:
          name: "All Themes - Archive Manager"
          tag: "${{steps.date.outputs.date}}"
          omitBodyDuringUpdate: true
          omitNameDuringUpdate: true
          allowUpdates: true
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Release Info
        id: info
        run: |
          echo "Published themes: ${{steps.date.outputs.date}} to: https://github.com/${{ steps.env.outputs.RELEASE_ORG}}/${{ steps.env.outputs.RELEASE_REPO}}"
     
      - name: Checkout repo again
        uses: actions/checkout@v4  

      - name: Reset working directory
        run: |
          cd /
        
      - name: Create temporary credits file
        run: |
          echo preview > "preview/credits.txt"
          
      - name: Generate text file with all directory names, with directory name inside
        run: |
          mkdir -p /tmp/page && for dir in */; do dir_name="${dir%/}"; (cd "${dir_name}" && echo "| ![${dir_name}](<https://raw.githubusercontent.com/MustardOS/theme/main/preview/${dir_name}.png>) <br>[${dir_name}" > "/tmp/page/${dir_name}.txt" && echo -n "](https://github.com/MustardOS/theme/releases/latest/download/${dir_name}.zip)<br><sup>" | tr [:space:] "." >> "/tmp/page/${dir_name}.txt"); cat "${dir_name}/credits.txt" >> "/tmp/page/${dir_name}.txt"; (cd "${dir_name}" && echo "</sup> " >> "/tmp/page/${dir_name}.txt"); done
       
      - name: Replace line breaks with space
        run: |
          mkdir -p /tmp/txt && for dir in */; do dir_name="${dir%/}"; tr "\n" " " < "/tmp/page/${dir_name}.txt" > "/tmp/txt/${dir_name}.txt"; done

      - name: Ensure all line breaks are now deleted
        run: |
          for dir in */; do dir_name="${dir%/}"; tr -d "\n\r" < "/tmp/txt/${dir_name}.txt" > "/tmp/page/${dir_name}.txt"; done

      - name: Delete placeholder preview text file
        run: |
          rm /tmp/page/preview.txt

      - name: Delete placeholder preview text file
        run: |
          rm /tmp/txt/preview.txt

      - name: make all file names uppercase
        run: |
          cd /tmp/page && for f in *; do mv -- "$f" "$(tr [:lower:] [:upper:] <<< "$f")" ; done

      - name: Add enter at end of every file
        run: |
          for file in /tmp/page/*; do sed -i -e '$a\' "$file"; done
          
      - name: Combine the files
        run: |
          cat /tmp/page/* > /tmp/page/complet.txt

      - name: Format into three per line
        run: |
          paste -d ' ' - - - < /tmp/page/complet.txt > /tmp/page/complete.txt

      - name: Delete placeholder text file
        run: |
          rm /tmp/page/complet.txt

      - name: Delete placeholder credits file
        run: |
          rm preview/credits.txt

      - name: Delete old theme site
        run: |
          rm themesite.md

      - name: Delete old README
        run: |
          rm README.md
          
      - name: Insert | at end of every line
        run: |
          sed -i "s/$/ |/" /tmp/page/complete.txt
          
      - name: Test to see if this has worked
        run: |
          more "/tmp/page/complete.txt"    

      - name: Merge with the theme template
        run: |
          cat ".github/md_templates/themepagetemplate.md" /tmp/page/complete.txt > /tmp/themesite.md

      - name: Merge with the readme template
        run: |
          cat ".github/md_templates/readmetemplate.md" /tmp/page/complete.txt > /tmp/readme.md

      - name: Move file to correct location
        run: |
          cp "/tmp/themesite.md" "themesite.md"

      - name: Move file to correct location
        run: |
          cp "/tmp/readme.md" "README.md"

      - name: Push files to the github, replacing the previous
        run: |
          git config --global user.name "VagueParade"
          git config --global user.email "166325657+VagueParade@users.noreply.github.com"

          git add -A
          git commit -m "themesite.md & README.md"
          git push
          
